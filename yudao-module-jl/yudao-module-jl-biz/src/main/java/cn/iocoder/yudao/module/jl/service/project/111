package cn.iocoder.yudao.module.jl.controller.admin.project.vo;

import lombok.*;
import java.util.*;
import io.swagger.v3.oas.annotations.media.Schema;
import cn.iocoder.yudao.framework.common.pojo.PageParam;
import org.springframework.format.annotation.DateTimeFormat;
import java.time.LocalDateTime;

import static cn.iocoder.yudao.framework.common.util.date.DateUtils.FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND;

@Schema(description = "管理后台 - 项目采购单物流信息分页 Request VO")
@Data
@EqualsAndHashCode(callSuper = true)
@ToString(callSuper = true)
public class SupplierPageReqVO extends PageParam {

    @Schema(description = "创建时间")
    @DateTimeFormat(pattern = FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND)
    private LocalDateTime[] createTime;

    @Schema(description = "名称", example = "王五")
    private String name;

    @Schema(description = "联系人", example = "李四")
    private String contactName;

    @Schema(description = "联系电话")
    private String contactPhone;

    @Schema(description = "结算周期")
    private String paymentCycle;

    @Schema(description = "银行卡号", example = "14108")
    private String bankAccount;

    @Schema(description = "税号")
    private String taxNumber;

    @Schema(description = "备注")
    private String mark;

    @Schema(description = "发票抬头")
    private String billTitle;

    @Schema(description = "开发方式")
    private String billWay;

    @Schema(description = "开票要求")
    private String billRequest;

    @Schema(description = "联系人所属部门")
    private String contactDepartment;

    @Schema(description = "产品")
    private String product;

    @Schema(description = "折扣", example = "10024")
    private String discount;

    @Schema(description = "联系人的职位")
    private String contactLevel;

    @Schema(description = "支行")
    private String subBranch;

    @Schema(description = "渠道类型", example = "2")
    private String channelType;

    @Schema(description = "服务目录")
    private String serviceCatalog;

    @Schema(description = "核心优势")
    private String advantage;

    @Schema(description = "劣势")
    private String disadvantage;

    @Schema(description = "公司负责人")
    private String companyManager;

    @Schema(description = "商务负责人")
    private String businessManager;

    @Schema(description = "技术负责人")
    private String techManager;

    @Schema(description = "售中负责人")
    private String manager;

    @Schema(description = "售后负责人")
    private String afterManager;

    @Schema(description = "公司地址")
    private String address;

    @Schema(description = "标签ids")
    private String tagIds;

}
